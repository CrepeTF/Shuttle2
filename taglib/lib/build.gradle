apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_static', '-DCMAKE_CXX_FLAGS_DEBUG=-O2'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = ['distribution/taglib/lib']
        }
    }

    externalNativeBuild {
        cmake {
            version '3.10.2'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin Standard Library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.documentfile:documentfile:1.0.1'
}

// Workaround library native code dependency issue in gradle 3.0.0
// refer to https://issuetracker.google.com/issues/69616088
// Note that the followings are only needed to generate lib package
// into $project/distribution directory, does NOT affect application module;
// Only enable these when want to build libs (together with note
// inside settings.gradle)
//
//tasks.whenTaskAdded { task ->
//    if (task.name == 'externalNativeBuildRelease') {
//        task.dependsOn ":taglib:gen:externalNativeBuildRelease"
//    } else if (task.name == 'externalNativeBuildDebug') {
//        task.dependsOn ":taglib:gen:externalNativeBuildDebug"
//    }
//}